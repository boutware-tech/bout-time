/**                 ***COPYRIGHT STARTS HERE***
 *  BoutTime - the wrestling tournament administrator.
 *
 *  Copyright (C) 2010  Jeffrey K. Rutt
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *                  ***COPYRIGHT ENDS HERE***                                */

package bouttime.gui.panel;

import bouttime.dao.Dao;
import bouttime.mainview.BoutTimeView;
import bouttime.model.Group;
import java.util.LinkedHashSet;
import java.util.Set;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 * A class to display the bout by session and mat with a chart.
 */
public class BoutsBySessionMatChart extends org.jfree.chart.ChartPanel {
    private BoutTimeView view;

    ////////////////////////////////////////////////////////////////////////////
    // Constructors
    ////////////////////////////////////////////////////////////////////////////

    /**
     * No-arg constructor to make netBeans GUI builder happy.  In order to
     * add this class to the Palette, you are required to have a no-arg
     * constructor.  There is no other need for this, so don't use it.
     * @deprecated
     */
    public BoutsBySessionMatChart() {this(null);}
    
    public BoutsBySessionMatChart(BoutTimeView v) {
        super(null);
        this.view = v;
        initComponents();
    }

    /**
     * Update the chart.
     */
    public void updateStats() {
        if (this.view == null) {
            this.setChart(null);
            return;
        }

        Dao dao = this.view.getDao();
        if (!dao.isOpen()) {
            this.setChart(null);
            return;
        }

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        // Use a LinkedHashSet to maintain order from how user entered it
        Set<String> sSet = new LinkedHashSet<String>();

        String matValues = dao.getMatValues();
        String sessionValues = dao.getSessionValues();

        if ((matValues != null) && !matValues.isEmpty() &&
                (sessionValues != null) && !sessionValues.isEmpty()) {

            String [] matTokens = matValues.split(",");
            String [] sessionTokens = sessionValues.split(",");
            for (String sess : sessionTokens) {
                sess = sess.trim();
                for (String mat : matTokens) {
                    // Add to a Set to ensure no duplicates
                    sSet.add(String.format("%s:%s", sess, mat.trim()));
                }
            }

            for (String s : sSet) {
                String [] tokens = s.split(":");

                int count = 0;
                for (Group g : dao.getGroupsBySessionMat(tokens[0], tokens[1])) {
                    count += g.getNumBouts();
                }

                dataset.setValue(count, tokens[0], tokens[1]);
            }
        }

        JFreeChart chart = ChartFactory.createBarChart("Bouts by Session and Mat",
                "Mats", "Bouts", dataset, PlotOrientation.VERTICAL, true,
                true, false);

        this.setChart(chart);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Form"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

}
